{"version":3,"file":"component_fixture.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/component_fixture.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ComponentRef, DebugElement, ElementRef, NgZone, getDebugNode} from '@angular/core';\nimport {scheduleMicroTask} from './facade/lang';\n\n\n/**\n * Fixture for debugging and testing a component.\n *\n * @stable\n */\nexport class ComponentFixture<T> {\n  /**\n   * The DebugElement associated with the root element of this component.\n   */\n  debugElement: DebugElement;\n\n  /**\n   * The instance of the root component class.\n   */\n  componentInstance: T;\n\n  /**\n   * The native element at the root of the component.\n   */\n  nativeElement: any;\n\n  /**\n   * The ElementRef for the element at the root of the component.\n   */\n  elementRef: ElementRef;\n\n  /**\n   * The ChangeDetectorRef for the component\n   */\n  changeDetectorRef: ChangeDetectorRef;\nprivate _isStable: boolean = true;\nprivate _isDestroyed: boolean = false;\nprivate _resolve: (result: any) => void;\nprivate _promise: Promise<any> = null;\nprivate _onUnstableSubscription: any /** TODO #9100 */ = null;\nprivate _onStableSubscription: any /** TODO #9100 */ = null;\nprivate _onMicrotaskEmptySubscription: any /** TODO #9100 */ = null;\nprivate _onErrorSubscription: any /** TODO #9100 */ = null;\n/**\n * @param {?} componentRef\n * @param {?} ngZone\n * @param {?} _autoDetect\n */\nconstructor(\npublic componentRef: ComponentRef<T>,\npublic ngZone: NgZone,\nprivate _autoDetect: boolean) {\n    this.changeDetectorRef = componentRef.changeDetectorRef;\n    this.elementRef = componentRef.location;\n    this.debugElement = <DebugElement>getDebugNode(this.elementRef.nativeElement);\n    this.componentInstance = componentRef.instance;\n    this.nativeElement = this.elementRef.nativeElement;\n    this.componentRef = componentRef;\n    this.ngZone = ngZone;\n\n    if (ngZone != null) {\n      this._onUnstableSubscription =\n          ngZone.onUnstable.subscribe({next: () => { this._isStable = false; }});\n      this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n        next: () => {\n          if (this._autoDetect) {\n            // Do a change detection run with checkNoChanges set to true to check\n            // there are no changes on the second run.\n            this.detectChanges(true);\n          }\n        }\n      });\n      this._onStableSubscription = ngZone.onStable.subscribe({\n        next: () => {\n          this._isStable = true;\n          // Check whether there is a pending whenStable() completer to resolve.\n          if (this._promise !== null) {\n            // If so check whether there are no pending macrotasks before resolving.\n            // Do this check in the next tick so that ngZone gets a chance to update the state of\n            // pending macrotasks.\n            scheduleMicroTask(() => {\n              if (!this.ngZone.hasPendingMacrotasks) {\n                if (this._promise !== null) {\n                  this._resolve(true);\n                  this._resolve = null;\n                  this._promise = null;\n                }\n              }\n            });\n          }\n        }\n      });\n\n      this._onErrorSubscription =\n          ngZone.onError.subscribe({next: (error: any) => { throw error; }});\n    }\n  }\n/**\n * @param {?} checkNoChanges\n * @return {?}\n */\nprivate _tick(checkNoChanges: boolean) {\n    this.changeDetectorRef.detectChanges();\n    if (checkNoChanges) {\n      this.checkNoChanges();\n    }\n  }\n/**\n *  Trigger a change detection cycle for the component.\n * @param {?=} checkNoChanges\n * @return {?}\n */\ndetectChanges(checkNoChanges: boolean = true): void {\n    if (this.ngZone != null) {\n      // Run the change detection inside the NgZone so that any async tasks as part of the change\n      // detection are captured by the zone and can be waited for in isStable.\n      this.ngZone.run(() => { this._tick(checkNoChanges); });\n    } else {\n      // Running without zone. Just do the change detection.\n      this._tick(checkNoChanges);\n    }\n  }\n/**\n *  Do a change detection run to make sure there were no changes.\n * @return {?}\n */\ncheckNoChanges(): void { this.changeDetectorRef.checkNoChanges(); }\n/**\n *  Set whether the fixture should autodetect changes. * Also runs detectChanges once so that any existing change is detected.\n * @param {?=} autoDetect\n * @return {?}\n */\nautoDetectChanges(autoDetect: boolean = true) {\n    if (this.ngZone == null) {\n      throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n    }\n    this._autoDetect = autoDetect;\n    this.detectChanges();\n  }\n/**\n *  Return whether the fixture is currently stable or has async tasks that have not been completed yet.\n * @return {?}\n */\nisStable(): boolean { return this._isStable && !this.ngZone.hasPendingMacrotasks; }\n/**\n *  Get a promise that resolves when the fixture is stable. * This can be used to resume testing after events have triggered asynchronous activity or asynchronous change detection.\n * @return {?}\n */\nwhenStable(): Promise<any> {\n    if (this.isStable()) {\n      return Promise.resolve(false);\n    } else if (this._promise !== null) {\n      return this._promise;\n    } else {\n      this._promise = new Promise(res => { this._resolve = res; });\n      return this._promise;\n    }\n  }\n/**\n *  Trigger component destruction.\n * @return {?}\n */\ndestroy(): void {\n    if (!this._isDestroyed) {\n      this.componentRef.destroy();\n      if (this._onUnstableSubscription != null) {\n        this._onUnstableSubscription.unsubscribe();\n        this._onUnstableSubscription = null;\n      }\n      if (this._onStableSubscription != null) {\n        this._onStableSubscription.unsubscribe();\n        this._onStableSubscription = null;\n      }\n      if (this._onMicrotaskEmptySubscription != null) {\n        this._onMicrotaskEmptySubscription.unsubscribe();\n        this._onMicrotaskEmptySubscription = null;\n      }\n      if (this._onErrorSubscription != null) {\n        this._onErrorSubscription.unsubscribe();\n        this._onErrorSubscription = null;\n      }\n      this._isDestroyed = true;\n    }\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** The DebugElement associated with the root element of this component.\n @type {?} */\nComponentFixture.prototype.debugElement;\n /** The instance of the root component class.\n @type {?} */\nComponentFixture.prototype.componentInstance;\n /** The native element at the root of the component.\n @type {?} */\nComponentFixture.prototype.nativeElement;\n /** The ElementRef for the element at the root of the component.\n @type {?} */\nComponentFixture.prototype.elementRef;\n /** The ChangeDetectorRef for the component\n @type {?} */\nComponentFixture.prototype.changeDetectorRef;\n /** @type {?} */\nComponentFixture.prototype._isStable;\n /** @type {?} */\nComponentFixture.prototype._isDestroyed;\n /** @type {?} */\nComponentFixture.prototype._resolve;\n /** @type {?} */\nComponentFixture.prototype._promise;\n /** @type {?} */\nComponentFixture.prototype._onUnstableSubscription;\n /** @type {?} */\nComponentFixture.prototype._onStableSubscription;\n /** @type {?} */\nComponentFixture.prototype._onMicrotaskEmptySubscription;\n /** @type {?} */\nComponentFixture.prototype._onErrorSubscription;\n /** @type {?} */\nComponentFixture.prototype.componentRef;\n /** @type {?} */\nComponentFixture.prototype.ngZone;\n /** @type {?} */\nComponentFixture.prototype._autoDetect;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}