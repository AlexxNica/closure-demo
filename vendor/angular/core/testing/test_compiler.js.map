{"version":3,"file":"test_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/test_compiler.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,QAAQ,EAAwE,MAAM,eAAe;OAEtG,EAAC,aAAa,EAAC,MAAM,iBAAiB;AAI7C;;;;GAIG;AACH;IAAqC,mCAAQ;IAA7C;QAAqC,8BAAQ;IAkC7C,CAAC;IAjCC,sBAAI,qCAAQ;aAAZ,cAA2B,MAAM,aAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACrD;;;;OAIG;IACH,wCAAc,GAAd,UAAe,MAAiB,EAAE,SAAqC;QACnE,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IACH;;;;OAIG;IACH,2CAAiB,GAAjB,UAAkB,SAAoB,EAAE,SAAsC;QAC1E,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IACH;;;;OAIG;IACH,2CAAiB,GAAjB,UAAkB,SAAoB,EAAE,SAAsC;QAC1E,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IACH;;;;OAIG;IACH,sCAAY,GAAZ,UAAa,SAAoB,EAAE,SAAiC;QAChE,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IACH,sBAAC;AAAD,CAAC,AAlCD,CAAqC,QAAQ,GAkC5C;AAED;;;;GAIG;AACH;IAAA;IAOA,CAAC;IAND;;;;OAIG;IACH,sDAAqB,GAArB,UAAsB,OAA2B,IAAG,CAAC;IACrD,6BAAC;AAAD,CAAC,AAPD,IAOC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerOptions, Component, Directive, Injector, NgModule, Pipe, Type} from '@angular/core';\n\nimport {unimplemented} from './facade/errors';\nimport {MetadataOverride} from './metadata_override';\n\n\n/**\n * Special interface to the compiler only used by testing\n *\n * @experimental\n */\nexport class TestingCompiler extends Compiler {\n  get injector(): Injector { throw unimplemented(); }\n/**\n * @param {?} module\n * @param {?} overrides\n * @return {?}\n */\noverrideModule(module: Type<any>, overrides: MetadataOverride<NgModule>): void {\n    throw unimplemented();\n  }\n/**\n * @param {?} directive\n * @param {?} overrides\n * @return {?}\n */\noverrideDirective(directive: Type<any>, overrides: MetadataOverride<Directive>): void {\n    throw unimplemented();\n  }\n/**\n * @param {?} component\n * @param {?} overrides\n * @return {?}\n */\noverrideComponent(component: Type<any>, overrides: MetadataOverride<Component>): void {\n    throw unimplemented();\n  }\n/**\n * @param {?} directive\n * @param {?} overrides\n * @return {?}\n */\noverridePipe(directive: Type<any>, overrides: MetadataOverride<Pipe>): void {\n    throw unimplemented();\n  }\n}\n\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nexport abstract class TestingCompilerFactory {\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\ncreateTestingCompiler(options?: CompilerOptions[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}