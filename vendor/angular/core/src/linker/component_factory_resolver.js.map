{"version":3,"file":"component_factory_resolver.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/component_factory_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,SAAS,EAAC,MAAM,kBAAkB;OACnC,EAAC,SAAS,EAAC,MAAM,gBAAgB;AAOxC;;GAEG;AACH;IAA6C,2CAAS;IACtD;;OAEG;IACH,iCAAmB,SAAmB;QAClC,kBAAM,oCAAkC,SAAS,CAAC,SAAS,CAAG,CAAC,CAAC;QADjD,cAAS,GAAT,SAAS,CAAU;IAEpC,CAAC;IAEM,sDAA8B,GAArC;QACD,gBAAgB;QACjB,uBAAuB,CAAC,SAAS,CAAC,SAAS,CAAC;IAC1C,CAAC;IAEH,8BAAC;AAAD,CAAC,AAbD,CAA6C,SAAS,GAarD;AAED;IAAA;IAQA,CAAC;IAPD;;;OAGG;IACH,+DAAuB,GAAvB,UAA2B,SAAoC;QAC3D,MAAM,IAAI,uBAAuB,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IACH,oCAAC;AAAD,CAAC,AARD,IAQC;AAED;;GAEG;AACH;IAAA;IAcA,CAAC;IAZD;;;;OAIG;IACH,0DAAuB,GAAvB,UAA2B,SAAkB,IAAG,CAAC;IAExC,uDAA8B,GAArC;QACD,gBAAgB;QACjB,wBAAwB,CAAC,IAAI,CAAC;IAC5B,CAAC;IAXM,6BAAI,GAA6B,IAAI,6BAA6B,EAAE,CAAC;IAa9E,+BAAC;AAAD,CAAC,AAdD,IAcC;AAED;IAEA;;;OAGG;IACH,yCAAY,SAAkC,EACtC,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QANjC,eAAU,GAAG,IAAI,GAAG,EAA8B,CAAC;QAOvD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,IAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,iEAAuB,GAAvB,UAA2B,SAAoC;QAC3D,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEM,8DAA8B,GAArC;QACD,gBAAgB;QACjB,+BAA+B,CAAC,SAAS,CAAC,UAAU,CAAC;QACpD,gBAAgB;QACjB,+BAA+B,CAAC,SAAS,CAAC,OAAO,CAAC;IAChD,CAAC;IAEH,sCAAC;AAAD,CAAC,AAhCD,IAgCC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BaseError} from '../facade/errors';\nimport {stringify} from '../facade/lang';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\n\n\n\n/**\n * @stable\n */\nexport class NoComponentFactoryError extends BaseError {\n/**\n * @param {?} component\n */\nconstructor(public component: Function) {\n    super(`No component factory found for ${stringify(component)}`);\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nNoComponentFactoryError.prototype.component;\n  }\n\n}\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw new NoComponentFactoryError(component);\n  }\n}\n\n/**\n * @stable\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nComponentFactoryResolver.NULL;\n  }\n\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n */\nconstructor(factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ result = this._factories.get(component);\n    if (!result) {\n      result = this._parent.resolveComponentFactory(component);\n    }\n    return result;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n /** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}