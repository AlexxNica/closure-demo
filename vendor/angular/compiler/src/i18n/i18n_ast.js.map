{"version":3,"file":"i18n_ast.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/i18n/i18n_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nexport class Message {\n/**\n * @param {?} nodes message AST\n * @param {?} placeholders maps placeholder names to static content\n * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n * @param {?} meaning\n * @param {?} description\n */\nconstructor(\npublic nodes: Node[],\npublic placeholders: {[phName: string]: string},\npublic placeholderToMessage: {[phName: string]: Message},\npublic meaning: string,\npublic description: string) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nMessage.prototype.nodes;\n /** @type {?} */\nMessage.prototype.placeholders;\n /** @type {?} */\nMessage.prototype.placeholderToMessage;\n /** @type {?} */\nMessage.prototype.meaning;\n /** @type {?} */\nMessage.prototype.description;\n  }\n\n}\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context?: any): any;\n}\n\nexport class Text implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitText(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nText.prototype.value;\n /** @type {?} */\nText.prototype.sourceSpan;\n  }\n\n}\n\n// TODO(vicb): do we really need this node (vs an array) ?\nexport class Container implements Node {\n/**\n * @param {?} children\n * @param {?} sourceSpan\n */\nconstructor(public children: Node[],\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitContainer(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nContainer.prototype.children;\n /** @type {?} */\nContainer.prototype.sourceSpan;\n  }\n\n}\n\nexport class Icu implements Node {\npublic expressionPlaceholder: string;\n/**\n * @param {?} expression\n * @param {?} type\n * @param {?} cases\n * @param {?} sourceSpan\n */\nconstructor(\npublic expression: string,\npublic type: string,\npublic cases: {[k: string]: Node},\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitIcu(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nIcu.prototype.expressionPlaceholder;\n /** @type {?} */\nIcu.prototype.expression;\n /** @type {?} */\nIcu.prototype.type;\n /** @type {?} */\nIcu.prototype.cases;\n /** @type {?} */\nIcu.prototype.sourceSpan;\n  }\n\n}\n\nexport class TagPlaceholder implements Node {\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} startName\n * @param {?} closeName\n * @param {?} children\n * @param {?} isVoid\n * @param {?} sourceSpan\n */\nconstructor(\npublic tag: string,\npublic attrs: {[k: string]: string},\npublic startName: string,\npublic closeName: string,\npublic children: Node[],\npublic isVoid: boolean,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitTagPlaceholder(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nTagPlaceholder.prototype.tag;\n /** @type {?} */\nTagPlaceholder.prototype.attrs;\n /** @type {?} */\nTagPlaceholder.prototype.startName;\n /** @type {?} */\nTagPlaceholder.prototype.closeName;\n /** @type {?} */\nTagPlaceholder.prototype.children;\n /** @type {?} */\nTagPlaceholder.prototype.isVoid;\n /** @type {?} */\nTagPlaceholder.prototype.sourceSpan;\n  }\n\n}\n\nexport class Placeholder implements Node {\n/**\n * @param {?} value\n * @param {?} name\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic name: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitPlaceholder(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nPlaceholder.prototype.value;\n /** @type {?} */\nPlaceholder.prototype.name;\n /** @type {?} */\nPlaceholder.prototype.sourceSpan;\n  }\n\n}\n\nexport class IcuPlaceholder implements Node {\n/**\n * @param {?} value\n * @param {?} name\n * @param {?} sourceSpan\n */\nconstructor(public value: Icu,\npublic name: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitIcuPlaceholder(this, context); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nIcuPlaceholder.prototype.value;\n /** @type {?} */\nIcuPlaceholder.prototype.name;\n /** @type {?} */\nIcuPlaceholder.prototype.sourceSpan;\n  }\n\n}\n\nexport interface Visitor {\n  visitText(text: Text, context?: any): any;\n  visitContainer(container: Container, context?: any): any;\n  visitIcu(icu: Icu, context?: any): any;\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any;\n  visitPlaceholder(ph: Placeholder, context?: any): any;\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}