{"version":3,"file":"mock_location_strategy.js","sourceRoot":"","sources":["../../../../modules/@angular/common/testing/mock_location_strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @stable\n */\n\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n/**\n */\nconstructor() { super(); }\n/**\n * @param {?} url\n * @return {?}\n */\nsimulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string { return this.internalPath; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n/**\n * @param {?} ctx\n * @param {?} title\n * @param {?} path\n * @param {?} query\n * @return {?}\n */\npushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const /** @type {?} */ url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n/**\n * @param {?} ctx\n * @param {?} title\n * @param {?} path\n * @param {?} query\n * @return {?}\n */\nreplaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const /** @type {?} */ url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this.internalBaseHref; }\n/**\n * @return {?}\n */\nback(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      const /** @type {?} */ nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n/**\n * @return {?}\n */\nforward(): void { throw 'not implemented'; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nMockLocationStrategy.decorators;\n /** @nocollapse\n @type {?} */\nMockLocationStrategy.ctorParameters;\n /** @type {?} */\nMockLocationStrategy.prototype.internalBaseHref;\n /** @type {?} */\nMockLocationStrategy.prototype.internalPath;\n /** @type {?} */\nMockLocationStrategy.prototype.internalTitle;\n /** @type {?} */\nMockLocationStrategy.prototype.urlChanges;\n /** @type {?} */\nMockLocationStrategy.prototype._subject;\n  }\n\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n/**\n * @param {?} newUrl\n */\nconstructor(public newUrl: string) {}\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\n_MockPopStateEvent.prototype.pop;\n /** @type {?} */\n_MockPopStateEvent.prototype.type;\n /** @type {?} */\n_MockPopStateEvent.prototype.newUrl;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}