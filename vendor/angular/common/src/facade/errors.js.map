{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/facade/errors.ts"],"names":[],"mappings":";;;;;AACA;;;GAGG;AACH;IACE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACnC,CAAC;AAED;;GAEG;AACH;IAA+B,6BAAK;IAGpC;;OAEG;IACH,mBAAY,OAAe;QACvB,qEAAqE;QACrE,8DAA8D;QAC9D,IAAM,WAAW,GAAG,kBAAM,OAAO,CAAiB,CAAC;QACnD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED,sBAAI,8BAAO;aAAX,cAAgB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;aACnD,UAAY,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;;;OADV;IAEnD,sBAAI,2BAAI;aAAR,cAAa,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAC7C,sBAAI,4BAAK;aAAT,cAAc,MAAM,CAAC,CAAkB,CAAE,IAAI,CAAC,YAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC7E,UAAU,KAAK,IAAI,CAAkB,CAAE,IAAI,CAAC,YAAoB,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;;;OADN;IAE/E;;OAEG;IACH,4BAAQ,GAAR,cAAa,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAE1C,wCAA8B,GAArC;QACD,gBAAgB;QACjB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;IAC/B,CAAC;IAEH,gBAAC;AAAD,CAAC,AA5BD,CAA+B,KAAK,GA4BnC;AAED;;GAEG;AACH;IAAkC,gCAAS;IAE3C;;;OAGG;IACH,sBAAY,OAAe,EAAE,KAAU;QACnC,kBAAS,OAAO,qBAAe,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAE,KAAK,CAAG,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,sBAAI,+BAAK;aAAT;YACE,MAAM,CAAC,CAAkB,CAAE,CAAC,IAAI,CAAC,aAAa,YAAY,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAS,CAAC,CAAC;iBAC9G,KAAK,CAAC;QACb,CAAC;;;OAAA;IAEM,2CAA8B,GAArC;QACD,gBAAgB;QACjB,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC;IACnC,CAAC;IAEH,mBAAC;AAAD,CAAC,AArBD,CAAkC,SAAS,GAqB1C","sourcesContent":["\n/**\n * @license undefined Copyright Google Inc. All Rights Reserved. * Use of this source code is governed by an MIT-style license that can be found in the LICENSE file at https://angular.io/license\n * @return {?}\n */\nexport function unimplemented(): any {\n  throw new Error('unimplemented');\n}\n\n/**\n * @stable\n */\nexport class BaseError extends Error {\n  /** @internal **/\n  _nativeError: Error;\n/**\n * @param {?} message\n */\nconstructor(message: string) {\n    // Errors don't use current this, instead they create a new instance.\n    // We have to do forward all of our api to the nativeInstance.\n    const nativeError = super(message) as any as Error;\n    this._nativeError = nativeError;\n  }\n\n  get message() { return this._nativeError.message; }\n  set message(message) { this._nativeError.message = message; }\n  get name() { return this._nativeError.name; }\n  get stack() { return ( /** @type {?} */((this._nativeError as any))).stack; }\n  set stack(value) { ( /** @type {?} */((this._nativeError as any))).stack = value; }\n/**\n * @return {?}\n */\ntoString() { return this._nativeError.toString(); }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nBaseError.prototype._nativeError;\n  }\n\n}\n\n/**\n * @stable\n */\nexport class WrappedError extends BaseError {\n  originalError: any;\n/**\n * @param {?} message\n * @param {?} error\n */\nconstructor(message: string, error: any) {\n    super(`${message} caused by: ${error instanceof Error ? error.message: error }`);\n    this.originalError = error;\n  }\n\n  get stack() {\n    return ( /** @type {?} */(((this.originalError instanceof Error ? this.originalError : this._nativeError) as any)))\n        .stack;\n  }\n\n  static _tsickle_typeAnnotationsHelper() {\n /** @type {?} */\nWrappedError.prototype.originalError;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}